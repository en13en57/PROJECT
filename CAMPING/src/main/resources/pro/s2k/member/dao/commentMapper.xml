<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pro.s2k.camp.dao.CommentDAO">
	<!-- rv_idx에 따른 모두얻기 -->
	<select id="selectList" parameterType="hashmap" resultType="commentVO">
		select
			a.rv_idx, a.co_idx, a.co_content, a.co_regDate, a.co_modiDate,
				(select mb_nick from camp_member where mb_idx
				 = (select b.mb_idx from camp_review b where b.rv_idx = a.rv_idx)) as mb_nick
		from
			camp_comment a
		order by co_idx desc
	</select>
	
	<!-- co_idx에 따른 1개얻기 -->
	<select id="selectByIdx" parameterType="int" resultType="commentVO">
		select
			a.rv_idx, a.co_idx, a.co_content, a.co_regDate, a.co_modiDate,
				(select mb_nick from camp_member where mb_idx
				 = (select b.mb_idx from camp_review b where b.rv_idx = a.rv_idx)) as mb_nick
		from
			camp_comment a
		where co_idx = #{co_idx}
			order by co_idx desc
	</select>
	
	<!-- 1개에서 댓글 개수 구하기 -->
	<select id="selectCount" resultType="int">
		select count(*) from camp_comment where rv_idx=#{rv_idx}
	</select>
	
	<!-- 저장하기 -->
	<insert id="insert" parameterType="commentVO">
		insert into camp_comment
			(rv_idx,co_seq,co_lev,co_content,co_regDate,co_modiDate,co_ip)
		values
			(#{rv_idx},#{co_seq},#{co_lev},#{co_content},now(),now(),#{co_ip})
	</insert>
	<!-- 나보다 seq가 큰값을 모두 1증가시킴 -->
	<update id="updateSeq" parameterType="hashmap">
		update camp_comment set co_seq = co_seq + 1 where rv_idx = #{rv_idx} and co_seq > #{co_seq}
	</update>
	
	<!-- 나와 ref가 같으면서 seq가 크거나 같은것 뽑기 -->
	<select id="selectSeqList" parameterType="hashmap" resultType="commentVO">
		select * from camp_comment where rv_idx=#{rv_idx} and co_seq >= #{co_seq} order by co_seq
	</select>
	
		<!-- 5. 수정하기 -->
	<update id="update" parameterType="commentVO">
		update camp_comment set
			co_content = #{co_content},
			rv_modidate = #{rv_modidate},
			co_ip = #{co_ip}
		where
			rv_idx = #{rv_idx}
	</update>
	
	 
	 <!-- 삭제 -->
	 <!-- 삭제하기 -->
	 	<delete id="delete1" parameterType="int">
		delete from camp_comment where co_idx=#{co_idx} and del = 0
	</delete>	
	<delete id="delete2" parameterType="int">
		delete from camp_comment where co_idx=#{co_idx}
	</delete>
	<!-- 삭제표시로 변경하기 -->
	<update id="updateDel" parameterType="int">
		update camp_comment set del = 0 where co_idx = #{co_idx}	
	</update>
	<!-- 삭제표시값이 'Y' 모든 데이터 가져오기 -->	
	<select id="selectDelList" resultType="commentVO">
		select*from camp_comment where del = 0 order by co_idx desc
	</select>
	
	  	<!-- 현재 저장한 idx값 알아내기 -->
 	<select id="selectSeq" resultType="int">
 		select max(co_idx) from camp_comment
 	</select>

	
</mapper>