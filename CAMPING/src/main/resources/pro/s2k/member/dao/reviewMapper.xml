<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pro.s2k.camp.dao.ReviewDAO">
	<!-- 모두 얻기 -->
	<select id="selectList" parameterType="hashmap"
		resultType="reviewVO">
		select a.rv_idx, a.rv_title, a.rv_content, a.rv_regDate,
		a.rv_modiDate, a.rv_hit, a.del,
		(select mb_nick from camp_member where mb_idx = a.mb_idx) as mb_nick,
		<!-- 해당하는 글의 삭제하지 않은 댓글 개수 얻기 -->
		(select count(co_idx) from camp_comment where rv_idx = a.rv_idx and del2=0) as coCount
		from
		camp_review a
		<!-- 삭제 표시된 글은 리스트 하지 않음 -->
		where
		a.del = 0
		order by
		rv_idx desc limit #{startNo}, #{pageSize}
	</select>

	<!-- 1개 글 상세 보기 -->
	<select id="selectByIdx" parameterType="int"
		resultType="reviewVO">
		select a.rv_idx, a.rv_title, a.rv_modiDate, a.rv_hit,
		a.rv_content, a.del,
		(select mb_nick from camp_member where mb_idx = a.mb_idx) as mb_nick
		from
		camp_review a
		where rv_idx=#{rv_idx}
	</select>

	<!-- 본인이 작성한 글인지 판단하기 위함 -->
	<select id="selectMb_idx" parameterType="int" resultType="int">
		select
		mb_idx from camp_review where rv_idx = #{rv_idx}
	</select>

	<!-- 전체 개수 구하기(삭제 제외) -->
	<select id="selectCount" resultType="int">
		select count(*) from
		camp_review where del = 0
	</select>
	
	<!-- 리뷰 저장하기 -->
	<insert id="insert" parameterType="reviewVO">
		insert into camp_review
		(mb_idx,rv_title,rv_content,rv_regDate,rv_modiDate,rv_ip)
		values
		(#{mb_idx},#{rv_title},#{rv_content},now(),now(),#{rv_ip})
	</insert>
	
	<!-- 수정하기 -->
	<update id="update" parameterType="reviewVO">
		update camp_review set
		rv_title = #{rv_title},
		rv_content = #{rv_content},
		rv_modiDate = #{rv_modiDate},
		rv_ip = #{rv_ip}
		where
		rv_idx = #{rv_idx}
	</update>
	
	<!-- 조회수 증가하기 -->
	<update id="updateHit" parameterType="int">
		update camp_review set
		rv_hit = rv_hit + 1
		where
		rv_idx = #{rv_idx}
	</update>

	<!-- 삭제 -->
	<!-- 삭제표시된것만 삭제하기 -->
	<delete id="delete1" parameterType="int">
		delete from camp_review where
		rv_idx=#{rv_idx} and del = 1
	</delete>
	
	<!-- 완전삭제 -->
	<delete id="delete2" parameterType="int">
		delete from camp_review where
		rv_idx=#{rv_idx}
	</delete>
	
	<!-- 삭제표시로 변경하기 -->
	<update id="updateDel" parameterType="int">
		update camp_review set del
		= 1 where rv_idx = #{rv_idx}
	</update>

	<!-- 리뷰 검색 기능 -->
	<select id="selectSearchList" parameterType="hashmap"
		resultType="reviewVO">
		select a.rv_idx,a.rv_title,a.rv_content,a.rv_modiDate,a.rv_regDate,a.rv_hit, a.del,
		(select mb_nick from camp_member where mb_idx = a.mb_idx) as mb_nick
		from camp_review a
		where
		a.del=0
		and
		<if test="searchType == 'all'">
			(REGEXP_REPLACE(a.rv_title, <![CDATA['<[^>]*>|\&([^;])*;']]>,'') like concat('%',#{searchText},'%')
			or REGEXP_REPLACE(a.rv_content, <![CDATA['<[^>]*>|\&([^;])*;']]>,'') like concat ('%',#{searchText},'%')
			or (select mb_nick from camp_member where mb_idx = a.mb_idx) like
			concat('%',#{searchText},'%'))
		</if>
		<if test="searchType == 'title'">REGEXP_REPLACE(a.rv_title, <![CDATA['<[^>]*>|\&([^;])*;']]>,'') like concat('%',#{searchText},'%') </if>
		<if test="searchType == 'content'">REGEXP_REPLACE(a.rv_content, <![CDATA['<[^>]*>|\&([^;])*;']]>,'') like concat ('%',#{searchText},'%') </if>
		<if test="searchType == 'nick'"> (select mb_nick from camp_member where mb_idx = a.mb_idx)
			like concat('%',#{searchText},'%')</if>
		order by
		rv_idx desc limit #{startNo}, #{pageSize}
	</select>

	<!-- 리뷰 검색 개수 구하기 -->
	<select id="selectSearchCount" parameterType="commonVO"
		resultType="int">
		select count(a.rv_idx) from camp_review a
		where
		a.del=0
		and
		<if test="searchType == 'all'">
			(REGEXP_REPLACE(a.rv_title, <![CDATA['<[^>]*>|\&([^;])*;']]>,'') like concat('%',#{searchText},'%')
			or REGEXP_REPLACE(a.rv_content, <![CDATA['<[^>]*>|\&([^;])*;']]>,'') like concat ('%',#{searchText},'%')
			or (select mb_nick from camp_member where mb_idx = a.mb_idx) like
			concat('%',#{searchText},'%'))
		</if>
		<if test="searchType == 'title'">REGEXP_REPLACE(a.rv_title, <![CDATA['<[^>]*>|\&([^;])*;']]>,'') like concat('%',#{searchText},'%') </if>
		<if test="searchType == 'content'">REGEXP_REPLACE(a.rv_content, <![CDATA['<[^>]*>|\&([^;])*;']]>,'') like concat ('%',#{searchText},'%')  </if>
		<if test="searchType == 'nick'"> (select mb_nick from camp_member where mb_idx = a.mb_idx)
			like concat('%',#{searchText},'%') </if>
	</select>
</mapper>